// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Person {
  id          String        @id @default(cuid())
  name        String
  birthday    DateTime?
  howWeMet    String?
  interests   String[]
  notes       String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  mentions    DiaryMention[]
}

model DiaryEntry {
  id          String    @id @default(cuid())
  content     String
  date        DateTime  @default(now())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  mentions    DiaryMention[]
  locations   DiaryLocation[]
}

model DiaryMention {
  id            String      @id @default(cuid())
  person        Person      @relation(fields: [personId], references: [id], onDelete: Cascade)
  personId      String
  diaryEntry    DiaryEntry  @relation(fields: [diaryEntryId], references: [id], onDelete: Cascade)
  diaryEntryId  String
  createdAt     DateTime    @default(now())

  @@unique([personId, diaryEntryId])
}

model DiaryLocation {
  id           String      @id @default(cuid())
  name         String
  placeId      String      @unique
  lat          Float
  lng          Float
  diaryEntry   DiaryEntry  @relation(fields: [diaryEntryId], references: [id], onDelete: Cascade)
  diaryEntryId String
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt

  @@index([diaryEntryId])
}
